**** .h
#pragma once
class Vector1
{
private:
	int vec[10], n;
public:
	Vector1(int _n); // constructor
	~Vector1(void); //destructor

	void cargarVector(); //metodos
	void mostrarVector();
	void ordenarVector();
	void eliminar();
};
**** .cpp
#include "StdAfx.h"
#include <iostream>
#include "Vector1.h"

using namespace std;

Vector1::Vector1(int _n)
{
	n=_n;
}


Vector1::~Vector1(void)
{
}

void Vector1::cargarVector(){
	for(int i=0;i<n;i++){
		cout<<"vec["<<i<<"] =" ;
		cin>>vec[i];
	}
}
void Vector1::eliminar()
{
	for (int a=0; a<n;a++)
	{if (vec[a]%2!=0)
	{for (int i=a;i<n;i++)
	{vec[i]=vec[i+1];}
	a--;
	n--;
	}
	
	}
}

void Vector1::mostrarVector(){
	for(int i=0;i<n;i++){
		cout<<vec[i]<<", ";
	}
	cout<<endl;
}

void Vector1::ordenarVector(){
	int aux;
	for(int i=0; i<(n-1); i++){
		for(int j=i; j<n; j++){
			if(vec[i] > vec[j]){
				aux = vec[i];
				vec[i] = vec[j];
				vec[j] = aux;
			}
		}
	}
}
**** main
#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include "Vector1.h"  //Declarar el header de la clase

#define MAX 10

using namespace std;

void main(){

	int vec[MAX], n, op,m;
	do {
		cout<<"Ingrese el tamanio del vector : ";
		cin>>n;
	} while ((n>MAX) || (n<=0));
	Vector1 vector2(n);// Declarando el objeto vector1 de la clase vector
	do {
		cout<<"Ingrese el tamanio del vector2 : ";
		cin>>m;
	} while ((m>MAX) || (m<=0));
	Vector1 vector3(m);
	do{
		cout<<"-----       M E N U        -----"<<endl;
		cout<<"|1.- Cargar Vector.            |"<<endl;
		cout<<"|2.- Mostrar Vector.           |"<<endl;
		cout<<"|3.- Ordenar Vector.           |"<<endl;
		cout<<"|4.- eliminar impares.         |"<<endl;
		cout<<"|0.- Salir.                    |"<<endl;
		cout<<"--------------------------------"<<endl;
		cout<<" Elija una opcion"<<endl;
		cin>>op;
		switch(op){
		case 1:
			vector2.cargarVector();  //Llamar al metodo
			vector3.cargarVector();
			break;
		case 2:
			vector2.mostrarVector();
			vector3.mostrarVector();
			break;
		case 3:
			vector2.ordenarVector();
			vector3.ordenarVector();
			break;
		case 4:
			vector2.eliminar();
			vector3.eliminar();

		case 0: 
			cout<<"Salir"<<endl;
			break;
		default:
			cout<<"Error: Opcion no valida..."<<endl;
			break;
		}
	}while(op!=0);
	getch();
}
